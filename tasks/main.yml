---
- name: Initialize reset_apt_update
  ansible.builtin.set_fact:
    apt_update: false
  when: apt_update is not defined
# repositories
- name: Create /etc/apt/preferences.d
  ansible.builtin.file:
    state: directory
    path: /etc/apt/preferences.d
    mode: "0755"
- name: Enable buster-backports
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "/{{ item }}"
    mode: "0444"
  register: result
  loop:
    - etc/apt/sources.list.d/buster-backports.list
    - etc/apt/preferences.d/wireguard.pref
  when: ansible_distribution_release == "buster"
- name: Set set_apt_update
  ansible.builtin.set_fact:
    apt_update: true
  when: ansible_distribution_release == "buster" and result.changed
- name: Run apt update
  ansible.builtin.apt:
    update_cache: true
  when: apt_update
- name: Reset reset_apt_update
  ansible.builtin.set_fact:
    apt_update: false
  when: apt_update
- name: Install software
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
    install_recommends: false
  loop:
    - wireguard-tools
  loop_control:
    loop_var: item
- name: Create wireguard key if none exists so far
  block:
    - name: Check wg-private
      ansible.builtin.file:
        path: /etc/wireguard/wg-private.key
        state: file
        mode: "0600"
  rescue:
    - name: Create wg-private
      ansible.builtin.shell:
        cmd: "wg genkey | tee /etc/wireguard/wg-private.key | wg pubkey > /etc/wireguard/wg-public.key"
      changed_when: true
...
